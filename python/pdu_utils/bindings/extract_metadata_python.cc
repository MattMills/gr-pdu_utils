/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(extract_metadata.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(38bde9d2b655f115dc2ee682709d5447)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/pdu_utils/extract_metadata.h>
// pydoc.h is automatically generated in the build directory
#include <extract_metadata_pydoc.h>

void bind_extract_metadata(py::module& m)
{

    using extract_metadata = ::gr::pdu_utils::extract_metadata;


    py::class_<extract_metadata,
               gr::block,
               gr::basic_block,
               std::shared_ptr<extract_metadata>>(
        m, "extract_metadata", D(extract_metadata))

        .def(py::init(&extract_metadata::make),
             py::arg("key"),
             py::arg("scale"),
             py::arg("offset"),
             D(extract_metadata, make))


        .def("set_key",
             &extract_metadata::set_key,
             py::arg("key"),
             D(extract_metadata, set_key))


        .def("set_scale",
             &extract_metadata::set_scale,
             py::arg("scale"),
             D(extract_metadata, set_scale))


        .def("set_offset",
             &extract_metadata::set_offset,
             py::arg("offset"),
             D(extract_metadata, set_offset))


        .def("get_key", &extract_metadata::get_key, D(extract_metadata, get_key))


        .def("get_scale", &extract_metadata::get_scale, D(extract_metadata, get_scale))


        .def("get_offset", &extract_metadata::get_offset, D(extract_metadata, get_offset))

        ;
}
