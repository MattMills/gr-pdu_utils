/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(pdu_pfb_resamp.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(f7b9083a2a9452775f2f8333e3e9a6ef)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/pdu_utils/pdu_pfb_resamp.h>
// pydoc.h is automatically generated in the build directory
#include <pdu_pfb_resamp_pydoc.h>


template <typename T, typename S>
void bind_pdu_pfb_resamp_template(py::module& m, const char* classname)
{

    using pdu_pfb_resamp = ::gr::pdu_utils::pdu_pfb_resamp<T, S>;

    py::class_<pdu_pfb_resamp,
               gr::block,
               gr::basic_block,
               std::shared_ptr<pdu_pfb_resamp>>(m, classname)
        .def(py::init(&gr::pdu_utils::pdu_pfb_resamp<T, S>::make),
             py::arg("taps"),
             py::arg("n_filters"),
             py::arg("resamp_rate"))
        .def("set_taps", &pdu_pfb_resamp::set_taps, py::arg("taps"));
}


void bind_pdu_pfb_resamp(py::module& m)
{

    bind_pdu_pfb_resamp_template<float, float>(m, "pdu_pfb_resamp_fff");
    bind_pdu_pfb_resamp_template<gr_complex, float>(m, "pdu_pfb_resamp_ccf");
    bind_pdu_pfb_resamp_template<gr_complex, gr_complex>(m, "pdu_pfb_resamp_ccc");
}
