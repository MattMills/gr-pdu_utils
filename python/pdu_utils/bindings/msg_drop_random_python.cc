/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(msg_drop_random.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(833d9f29af64fcf3b88898b54b198c58)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/pdu_utils/msg_drop_random.h>
// pydoc.h is automatically generated in the build directory
#include <msg_drop_random_pydoc.h>

void bind_msg_drop_random(py::module& m)
{

    using msg_drop_random = ::gr::pdu_utils::msg_drop_random;


    py::class_<msg_drop_random,
               gr::block,
               gr::basic_block,
               std::shared_ptr<msg_drop_random>>(m, "msg_drop_random", D(msg_drop_random))

        .def(py::init(&msg_drop_random::make),
             py::arg("p_drop"),
             py::arg("seed") = 12345678,
             D(msg_drop_random, make))


        .def("set_prob_drop",
             &msg_drop_random::set_prob_drop,
             py::arg("p"),
             D(msg_drop_random, set_prob_drop))


        .def("reset", &msg_drop_random::reset, D(msg_drop_random, reset))


        .def("get_drop_count",
             &msg_drop_random::get_drop_count,
             D(msg_drop_random, get_drop_count))


        .def("get_msg_count",
             &msg_drop_random::get_msg_count,
             D(msg_drop_random, get_msg_count))


        .def("get_pass_count",
             &msg_drop_random::get_pass_count,
             D(msg_drop_random, get_pass_count))

        ;
}
