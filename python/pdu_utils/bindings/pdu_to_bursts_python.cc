/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(pdu_to_bursts.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(d2fef3c10429b6936ecffb8f96f422f8)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/pdu_utils/pdu_to_bursts.h>
// pydoc.h is automatically generated in the build directory
#include <pdu_to_bursts_pydoc.h>

template <typename T>
void bind_pdu_to_bursts_template(py::module& m, const char* classname)
{
    using pdu_to_bursts = ::gr::pdu_utils::pdu_to_bursts<T>;

    py::class_<pdu_to_bursts, gr::block, gr::basic_block, std::shared_ptr<pdu_to_bursts>>(
        m, classname)
        .def(py::init(&gr::pdu_utils::pdu_to_bursts<T>::make),
             py::arg("early_burst_behavior"),
             py::arg("max_queue_size") = 64);
}

void bind_pdu_to_bursts(py::module& m)
{

    bind_pdu_to_bursts_template<unsigned char>(m, "pdu_to_bursts_b");
    bind_pdu_to_bursts_template<short>(m, "pdu_to_bursts_s");
    bind_pdu_to_bursts_template<float>(m, "pdu_to_bursts_f");
    bind_pdu_to_bursts_template<gr_complex>(m, "pdu_to_bursts_c");
}
