/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(access_code_to_pdu.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(492ea2bbacaaeaa6c7e7342efd0432d7)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/pdu_utils/access_code_to_pdu.h>
// pydoc.h is automatically generated in the build directory
#include <access_code_to_pdu_pydoc.h>

void bind_access_code_to_pdu(py::module& m)
{

    using access_code_to_pdu = ::gr::pdu_utils::access_code_to_pdu;


    py::class_<access_code_to_pdu,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<access_code_to_pdu>>(
        m, "access_code_to_pdu", D(access_code_to_pdu))

        .def(py::init(&access_code_to_pdu::make),
             py::arg("access_code"),
             py::arg("tail_sync"),
             py::arg("burst_len"),
             py::arg("threshold"),
             py::arg("syncmode"),
             py::arg("readmode"),
             D(access_code_to_pdu, make))


        ;
}
