/*
 * Copyright 2022 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(pdu_flow_ctrl_helper.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(9ad954cbd0c298360575b91384e0453c)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <gnuradio/pdu_utils/pdu_flow_ctrl_helper.h>
// pydoc.h is automatically generated in the build directory
#include <pdu_flow_ctrl_helper_pydoc.h>

void bind_pdu_flow_ctrl_helper(py::module& m)
{

    using pdu_flow_ctrl_helper = ::gr::pdu_utils::pdu_flow_ctrl_helper;


    py::class_<pdu_flow_ctrl_helper, std::shared_ptr<pdu_flow_ctrl_helper>>(
        m, "pdu_flow_ctrl_helper", D(pdu_flow_ctrl_helper))

        .def(py::init<std::vector<std::shared_ptr<gr::basic_block>,
                                  std::allocator<std::shared_ptr<gr::basic_block>>>>(),
             py::arg("blocks"),
             D(pdu_flow_ctrl_helper, pdu_flow_ctrl_helper, 0))
        .def(py::init<gr::pdu_utils::pdu_flow_ctrl_helper const&>(),
             py::arg("arg0"),
             D(pdu_flow_ctrl_helper, pdu_flow_ctrl_helper, 1))


        .def("max_nmsgs",
             &pdu_flow_ctrl_helper::max_nmsgs,
             D(pdu_flow_ctrl_helper, max_nmsgs))


        .def("print_nmsgs",
             &pdu_flow_ctrl_helper::print_nmsgs,
             D(pdu_flow_ctrl_helper, print_nmsgs))

        ;
}
